"""Create User and APIKey tables

Revision ID: 31b8c6dd2e69
Revises: 
Create Date: 2024-11-11 12:54:19.829880

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '31b8c6dd2e69'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('UserID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Username', sa.String(length=255), nullable=False),
    sa.Column('Name', sa.String(length=255), nullable=False),
    sa.Column('Email', sa.String(length=255), nullable=False),
    sa.Column('Password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('UserID'),
    sa.UniqueConstraint('Email'),
    sa.UniqueConstraint('Username')
    )
    op.create_table('API_Key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('monthly_cost', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.UserID'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('API_Key', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_API_Key_key'), ['key'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('API_Key', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_API_Key_key'))

    op.drop_table('API_Key')
    op.drop_table('User')
    # ### end Alembic commands ###
